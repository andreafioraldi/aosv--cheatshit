1) Lists
--------

Polimophysm for lists. Those are circular double linked lists.
To check end use the head cause it is circular.

list_foreach() for iterators.

Lock-less list are single linked NULL terminated lists. RMW instructions allow
concurrent access with no locking.
Using compare-and-swap (CAS) we update the next ptr.
Deletion must uses locks.

2) Radix tree
-------------

Traversing the tree the value of next node is concatenation of the ancestors.
In Linux it is used to map long values to pointers.
Used for PIDs. idr.h is the implementation for this.
get does not needs locks, new needs locks.

3) Per-CPU var
--------------

mov %gs:x, %eax

In kernel gs points to per CPU memory area, in user mode points to VDSO.

DEFINE_PER_CPU(int, x)
this_cpu_read(x)

4) Other data structures
------------------------

 - Queue
 - Read-Black Tree, self balancing tree


